{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport appApi from \"../services/appApi\";\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: null,\n  reducers: {\n    addNotifications: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      if (state.newMessages[payload]) {\n        state.newMessages[payload] = state.newMessages[payload] + 1;\n      } else {\n        state.newMessages[payload] = 1;\n      }\n    },\n    resetNotifications: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      delete state.newMessages[payload];\n    }\n  },\n  extraReducers: builder => {\n    // save user after signup\n    builder.addMatcher(appApi.endpoints.signupUser.matchFulfilled, (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return payload;\n    });\n    // save user after login\n    builder.addMatcher(appApi.endpoints.loginUser.matchFulfilled, (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return payload;\n    });\n    // logout: destroy user session\n    builder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled, () => null);\n  }\n});\nexport const {\n  addNotifications,\n  resetNotifications\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","appApi","userSlice","name","initialState","reducers","addNotifications","state","_ref","payload","newMessages","resetNotifications","_ref2","extraReducers","builder","addMatcher","endpoints","signupUser","matchFulfilled","_ref3","loginUser","_ref4","logoutUser","actions","reducer"],"sources":["D:/programing/vs code/chat app deploy/mern-chat-frontend/src/features/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport appApi from \"../services/appApi\";\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: null,\r\n    reducers: {\r\n        addNotifications: (state, { payload }) => {\r\n            if (state.newMessages[payload]) {\r\n                state.newMessages[payload] = state.newMessages[payload] + 1;\r\n            } else {\r\n                state.newMessages[payload] = 1;\r\n            }\r\n        },\r\n        resetNotifications: (state, { payload }) => {\r\n            delete state.newMessages[payload];\r\n        },\r\n    },\r\n\r\n    extraReducers: (builder) => {\r\n        // save user after signup\r\n        builder.addMatcher(appApi.endpoints.signupUser.matchFulfilled, (state, { payload }) => payload);\r\n        // save user after login\r\n        builder.addMatcher(appApi.endpoints.loginUser.matchFulfilled, (state, { payload }) => payload);\r\n        // logout: destroy user session\r\n        builder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled, () => null);\r\n    },\r\n});\r\n\r\nexport const { addNotifications, resetNotifications } = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,oBAAoB;AAEvC,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;EACjCG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE;IACNC,gBAAgB,EAAEA,CAACC,KAAK,EAAAC,IAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,IAAA;MACjC,IAAID,KAAK,CAACG,WAAW,CAACD,OAAO,CAAC,EAAE;QAC5BF,KAAK,CAACG,WAAW,CAACD,OAAO,CAAC,GAAGF,KAAK,CAACG,WAAW,CAACD,OAAO,CAAC,GAAG,CAAC;MAC/D,CAAC,MAAM;QACHF,KAAK,CAACG,WAAW,CAACD,OAAO,CAAC,GAAG,CAAC;MAClC;IACJ,CAAC;IACDE,kBAAkB,EAAEA,CAACJ,KAAK,EAAAK,KAAA,KAAkB;MAAA,IAAhB;QAAEH;MAAQ,CAAC,GAAAG,KAAA;MACnC,OAAOL,KAAK,CAACG,WAAW,CAACD,OAAO,CAAC;IACrC;EACJ,CAAC;EAEDI,aAAa,EAAGC,OAAO,IAAK;IACxB;IACAA,OAAO,CAACC,UAAU,CAACd,MAAM,CAACe,SAAS,CAACC,UAAU,CAACC,cAAc,EAAE,CAACX,KAAK,EAAAY,KAAA;MAAA,IAAE;QAAEV;MAAQ,CAAC,GAAAU,KAAA;MAAA,OAAKV,OAAO;IAAA,EAAC;IAC/F;IACAK,OAAO,CAACC,UAAU,CAACd,MAAM,CAACe,SAAS,CAACI,SAAS,CAACF,cAAc,EAAE,CAACX,KAAK,EAAAc,KAAA;MAAA,IAAE;QAAEZ;MAAQ,CAAC,GAAAY,KAAA;MAAA,OAAKZ,OAAO;IAAA,EAAC;IAC9F;IACAK,OAAO,CAACC,UAAU,CAACd,MAAM,CAACe,SAAS,CAACM,UAAU,CAACJ,cAAc,EAAE,MAAM,IAAI,CAAC;EAC9E;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEZ,gBAAgB;EAAEK;AAAmB,CAAC,GAAGT,SAAS,CAACqB,OAAO;AACzE,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}