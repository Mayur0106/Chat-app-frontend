{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\vs code\\\\mern stack project\\\\mern-chat-frontend\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport \"./Sidebar.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sidebar() {\n  _s();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    socket,\n    setMembers,\n    members,\n    setCurrentRoom,\n    setRooms,\n    privateMemberMsg,\n    rooms,\n    setPrivateMemberMsg,\n    currentRoom\n  } = useContext(AppContext);\n  function joinRoom(room) {\n    let isPublic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (!user) {\n      return alert(\"Please login\");\n    }\n    socket.emit(\"join-room\", room, currentRoom);\n    setCurrentRoom(room);\n    if (isPublic) {\n      setPrivateMemberMsg(null);\n    }\n    // dispatch for notifications\n    dispatch(resetNotifications(room));\n  }\n  socket.off(\"notifications\").on(\"notifications\", room => {\n    if (currentRoom != room) dispatch(addNotifications(room));\n  });\n  useEffect(() => {\n    if (user) {\n      setCurrentRoom(\"general\");\n      getRooms();\n      socket.emit(\"join-room\", \"general\");\n      socket.emit(\"new-user\");\n    }\n  }, []);\n  socket.off(\"new-user\").on(\"new-user\", payload => {\n    setMembers(payload);\n  });\n  function getRooms() {\n    fetch(\"http://localhost:5001/rooms\").then(res => res.json()).then(data => setRooms(data));\n  }\n  function orderIds(id1, id2) {\n    if (id1 > id2) {\n      return id1 + \"-\" + id2;\n    } else {\n      return id2 + \"-\" + id1;\n    }\n  }\n  function handlePrivateMemberMsg(member) {\n    setPrivateMemberMsg(member);\n    const roomId = orderIds(user._id, member._id);\n    joinRoom(roomId, false);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Available rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: rooms.map((room, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        onClick: () => joinRoom(room),\n        active: room == currentRoom,\n        style: {\n          cursor: \"pointer\",\n          display: 'flex',\n          justifyContent: \"space-between\"\n        },\n        children: [room, \" \", currentRoom !== room && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge rounded-pill bg-primary\",\n          children: user.newMessages[room]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 47\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: members.map(member => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        style: {\n          cursor: \"pointer\"\n        },\n        active: (privateMemberMsg === null || privateMemberMsg === void 0 ? void 0 : privateMemberMsg._id) == (member === null || member === void 0 ? void 0 : member._id),\n        onClick: () => handlePrivateMemberMsg(member),\n        disabled: member._id === user._id,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 3,\n            className: \"member-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: member.picture,\n              className: \"member-status-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), member.status == \"online\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-circle sidebar-online-status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 58\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-circle sidebar-offline-status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 116\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 9,\n            children: [member.name, member._id === (user === null || user === void 0 ? void 0 : user._id) && \" (You)\", member.status == \"offline\" && \" (Offline)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge rounded-pill bg-primary\",\n              children: user.newMessages[orderIds(member._id, user._id)]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, member.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n_s(Sidebar, \"6CEj8Me5lNL4W32ff47MHQbV/VA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useContext","useEffect","Col","ListGroup","Row","useDispatch","useSelector","AppContext","addNotifications","resetNotifications","Fragment","_Fragment","jsxDEV","_jsxDEV","Sidebar","_s","user","state","dispatch","socket","setMembers","members","setCurrentRoom","setRooms","privateMemberMsg","rooms","setPrivateMemberMsg","currentRoom","joinRoom","room","isPublic","arguments","length","undefined","alert","emit","off","on","getRooms","payload","fetch","then","res","json","data","orderIds","id1","id2","handlePrivateMemberMsg","member","roomId","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","Item","onClick","active","style","cursor","display","justifyContent","className","newMessages","disabled","xs","src","picture","status","name","id","_c","$RefreshReg$"],"sources":["D:/programing/vs code/mern stack project/mern-chat-frontend/src/components/Sidebar.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport \"./Sidebar.css\";\n\nfunction Sidebar() {\n    const user = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n    const { socket, setMembers, members, setCurrentRoom, setRooms, privateMemberMsg, rooms, setPrivateMemberMsg, currentRoom } = useContext(AppContext);\n\n    function joinRoom(room, isPublic = true) {\n        if (!user) {\n            return alert(\"Please login\");\n        }\n        socket.emit(\"join-room\", room, currentRoom);\n        setCurrentRoom(room);\n\n        if (isPublic) {\n            setPrivateMemberMsg(null);\n        }\n        // dispatch for notifications\n        dispatch(resetNotifications(room));\n    }\n\n    socket.off(\"notifications\").on(\"notifications\", (room) => {\n        if (currentRoom != room) dispatch(addNotifications(room));\n    });\n\n    useEffect(() => {\n        if (user) {\n            setCurrentRoom(\"general\");\n            getRooms();\n            socket.emit(\"join-room\", \"general\");\n            socket.emit(\"new-user\");\n        }\n    }, []);\n\n    socket.off(\"new-user\").on(\"new-user\", (payload) => {\n        setMembers(payload);\n    });\n\n    function getRooms() {\n        fetch(\"http://localhost:5001/rooms\")\n            .then((res) => res.json())\n            .then((data) => setRooms(data));\n    }\n\n    function orderIds(id1, id2) {\n        if (id1 > id2) {\n            return id1 + \"-\" + id2;\n        } else {\n            return id2 + \"-\" + id1;\n        }\n    }\n\n    function handlePrivateMemberMsg(member) {\n        setPrivateMemberMsg(member);\n        const roomId = orderIds(user._id, member._id);\n        joinRoom(roomId, false);\n    }\n\n    if (!user) {\n        return <></>;\n    }\n  return (\n    <>\n       <h2> Available rooms</h2>\n       <ListGroup>\n         {rooms.map((room,idx)=>(\n            <ListGroup.Item key={idx} onClick={()=> joinRoom(room)} active={room == currentRoom} style={{cursor:\"pointer\",display:'flex',justifyContent:\"space-between\"}}>\n              {room} {currentRoom !== room && <span className='badge rounded-pill bg-primary'>{user.newMessages[room]}</span>}\n              </ListGroup.Item>\n            ))}\n       </ListGroup>\n       <h2> Members</h2>\n       <ListGroup>\n       {members.map((member) =>(\n       <ListGroup.Item  key={member.id} style={{cursor:\"pointer\"}} active={privateMemberMsg?._id == member?._id} onClick={()=>handlePrivateMemberMsg(member)} disabled={member._id === user._id}>\n        <Row>\n        <Col xs={3} className=\"member-status\">\n                            <img src={member.picture} className=\"member-status-img\" />\n                            {member.status == \"online\" ? <i className=\"fas fa-circle sidebar-online-status\"></i> : <i className=\"fas fa-circle sidebar-offline-status\"></i>}\n                        </Col>\n                        <Col xs={9}>\n                            {member.name}\n                            {member._id === user?._id && \" (You)\"}\n                            {member.status == \"offline\" && \" (Offline)\"}\n                        </Col>\n            <Col xs={1}>\n                <span className=\"badge rounded-pill bg-primary\">{user.newMessages[orderIds(member._id, user._id)]}</span>\n            </Col>\n        </Row>\n       </ListGroup.Item>))}\n       </ListGroup>\n    </>\n  );\n}\n\nexport default Sidebar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}