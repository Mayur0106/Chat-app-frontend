{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\vs code\\\\mern stack project\\\\mern-chat-frontend\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppContext } from '../context/appContext';\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sidebar() {\n  _s();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    socket,\n    setMembers,\n    members,\n    setCurrentRoom,\n    setRooms,\n    privateMemberMsg,\n    rooms,\n    setPrivateMemberMsg,\n    currentRoom\n  } = useContext(AppContext);\n  function joinRoom(room) {\n    let isPublic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (!user) {\n      return alert(\"please login\");\n    }\n    socket.emit(\"join-room\", room);\n    setCurrentRoom(room);\n    if (isPublic) {\n      setPrivateMemberMsg(null);\n    }\n    dispatch(resetNotifications(room));\n    socket.off('notifications').on('Notifications', room => {\n      dispatch(addNotifications(room));\n    });\n  }\n  useEffect(() => {\n    if (user) {\n      setCurrentRoom('general');\n      getRooms();\n      socket.emit(\"join-room\", \"general\");\n      socket.emit(\"new-user\");\n    }\n  }, []);\n  socket.off(\"new-user\").on(\"new-user\", payload => {\n    setMembers(payload);\n  });\n  function getRooms() {\n    fetch(\"http://localhost:5001/rooms\").then(res => res.json()).then(data => setRooms(data));\n  }\n  function orderIds(id1, id2) {\n    if (id1 > id2) {\n      return id1 + \"-\" + id2;\n    } else {\n      return id2 + \"-\" + id1;\n    }\n  }\n  function handlePrivateMemberMsg(member) {\n    setPrivateMemberMsg(member);\n    const roomId = orderIds(user._id, member._id);\n    joinRoom(roomId, false);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Available rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: rooms.map((room, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        onClick: () => joinRoom(room),\n        active: room == currentRoom,\n        style: {\n          cursor: \"pointer\",\n          display: 'flex',\n          justifyContent: \"space-between\"\n        },\n        children: [room, \" \", currentRoom != room && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge rounded-pill bg-primary\",\n          children: user.newMessages[room]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 46\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: members.map(member => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        style: {\n          cursor: \"pointer\"\n        },\n        active: (privateMemberMsg === null || privateMemberMsg === void 0 ? void 0 : privateMemberMsg._id) == (member === null || member === void 0 ? void 0 : member._id),\n        onClick: () => handlePrivateMemberMsg(member),\n        disabled: member._id === user._id,\n        children: member.name\n      }, member.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n_s(Sidebar, \"x4Fd7Fc30DpFE5km1jxA21oE0uQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useContext","useEffect","ListGroup","useDispatch","useSelector","AppContext","addNotifications","resetNotifications","Fragment","_Fragment","jsxDEV","_jsxDEV","Sidebar","_s","user","state","dispatch","socket","setMembers","members","setCurrentRoom","setRooms","privateMemberMsg","rooms","setPrivateMemberMsg","currentRoom","joinRoom","room","isPublic","arguments","length","undefined","alert","emit","off","on","getRooms","payload","fetch","then","res","json","data","orderIds","id1","id2","handlePrivateMemberMsg","member","roomId","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","Item","onClick","active","style","cursor","display","justifyContent","className","newMessages","disabled","name","id","_c","$RefreshReg$"],"sources":["D:/programing/vs code/mern stack project/mern-chat-frontend/src/components/Sidebar.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { ListGroup} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppContext } from '../context/appContext';\nimport { addNotifications,resetNotifications} from \"../features/userSlice\";\n\n function Sidebar() {\n    const user = useSelector((state) => state.user);\n    const dispatch= useDispatch()\n    const {socket,setMembers,members,setCurrentRoom,setRooms,privateMemberMsg,rooms,setPrivateMemberMsg,currentRoom} =useContext(AppContext);\n    \n    function joinRoom(room, isPublic = true){\n      if(!user) {\n          return alert(\"please login\");\n      }\n      socket.emit(\"join-room\",room);\n      setCurrentRoom(room);\n\n      if(isPublic){\n         setPrivateMemberMsg(null);\n      }\n        \n      dispatch(resetNotifications(room));\n\n      socket.off('notifications').on('Notifications', (room)=> {\n        dispatch(addNotifications(room));\n      })\n\n    }\n\n     useEffect(()=>{\n       if(user){\n        setCurrentRoom('general');\n        getRooms();\n        socket.emit(\"join-room\",\"general\");\n        socket.emit(\"new-user\");\n       }\n     } ,[]);\n\n    socket.off(\"new-user\").on(\"new-user\", (payload)=>{\n       setMembers(payload);\n    });\n    function getRooms(){\n      fetch(\"http://localhost:5001/rooms\")\n        .then((res) => res.json())\n        .then ((data) => setRooms(data));\n    }\n    function orderIds(id1,id2){\n      if(id1>id2){\n           return id1+\"-\"+id2;\n      }\n      else{\n         return id2 +\"-\"+id1;\n      }\n    }\n\n    function handlePrivateMemberMsg(member){\n      setPrivateMemberMsg(member);\n      const roomId = orderIds(user._id,member._id);\n      joinRoom(roomId ,false);\n    }\n\n    if(!user){\n      return <></>\n    }\n\n  return (\n    <>\n       <h2> Available rooms</h2>\n       <ListGroup>\n         {rooms.map((room,idx)=>(\n            <ListGroup.Item key={idx} onClick={()=> joinRoom(room)} active={room == currentRoom} style={{cursor:\"pointer\",display:'flex',justifyContent:\"space-between\"}}>\n              {room} {currentRoom != room && <span className='badge rounded-pill bg-primary'>{user.newMessages[room]}</span>}\n              </ListGroup.Item>\n            ))}\n       </ListGroup>\n       <h2> Members</h2>\n       <ListGroup>\n       {members.map((member) =>(\n       <ListGroup.Item  key={member.id} style={{cursor:\"pointer\"}} active={privateMemberMsg?._id == member?._id} onClick={()=>handlePrivateMemberMsg(member)} disabled={member._id === user._id}>\n         {member.name}\n       </ListGroup.Item>))}\n       </ListGroup>\n    </>\n  );\n}\n\nexport default Sidebar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}