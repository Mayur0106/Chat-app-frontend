{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport appApi from \"../services/appApi\";\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: null,\n  reducers: {\n    addNotifications: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n    },\n    resetNotifications: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n    }\n  },\n  extraReducers: builder => {\n    // save user after signup\n    builder.addMatcher(appApi.endpoints.signupUser.matchFulfilled, (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return payload;\n    });\n    // save user after login\n    builder.addMatcher(appApi.endpoints.loginUser.matchFulfilled, (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return payload;\n    });\n    // logout: destroy user session\n    builder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled, () => null);\n  }\n});\nexport const {\n  addNotifications,\n  resetNotifications\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","appApi","userSlice","name","initialState","reducers","addNotifications","state","_ref","payload","resetNotifications","_ref2","extraReducers","builder","addMatcher","endpoints","signupUser","matchFulfilled","_ref3","loginUser","_ref4","logoutUser","actions","reducer"],"sources":["D:/programing/vs code/mern stack project/mern-chat-frontend/src/features/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport appApi from \"../services/appApi\";\r\n\r\nexport const userSlice = createSlice({\r\n    name:\"user\",\r\n    initialState:null,\r\n    reducers:{\r\n        addNotifications:(state,{payload}) => {},\r\n        resetNotifications:(state,{payload}) =>{},\r\n    },\r\n\r\n    extraReducers: (builder) => {\r\n        // save user after signup\r\n        builder.addMatcher(appApi.endpoints.signupUser.matchFulfilled, (state, { payload }) => payload);\r\n        // save user after login\r\n        builder.addMatcher(appApi.endpoints.loginUser.matchFulfilled, (state, { payload }) => payload);\r\n        // logout: destroy user session\r\n        builder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled, () => null);\r\n    },\r\n});\r\n\r\nexport const { addNotifications, resetNotifications } = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,oBAAoB;AAEvC,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;EACjCG,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC,IAAI;EACjBC,QAAQ,EAAC;IACLC,gBAAgB,EAACA,CAACC,KAAK,EAAAC,IAAA,KAAe;MAAA,IAAd;QAACC;MAAO,CAAC,GAAAD,IAAA;IAAM,CAAC;IACxCE,kBAAkB,EAACA,CAACH,KAAK,EAAAI,KAAA,KAAc;MAAA,IAAb;QAACF;MAAO,CAAC,GAAAE,KAAA;IAAK;EAC5C,CAAC;EAEDC,aAAa,EAAGC,OAAO,IAAK;IACxB;IACAA,OAAO,CAACC,UAAU,CAACb,MAAM,CAACc,SAAS,CAACC,UAAU,CAACC,cAAc,EAAE,CAACV,KAAK,EAAAW,KAAA;MAAA,IAAE;QAAET;MAAQ,CAAC,GAAAS,KAAA;MAAA,OAAKT,OAAO;IAAA,EAAC;IAC/F;IACAI,OAAO,CAACC,UAAU,CAACb,MAAM,CAACc,SAAS,CAACI,SAAS,CAACF,cAAc,EAAE,CAACV,KAAK,EAAAa,KAAA;MAAA,IAAE;QAAEX;MAAQ,CAAC,GAAAW,KAAA;MAAA,OAAKX,OAAO;IAAA,EAAC;IAC9F;IACAI,OAAO,CAACC,UAAU,CAACb,MAAM,CAACc,SAAS,CAACM,UAAU,CAACJ,cAAc,EAAE,MAAM,IAAI,CAAC;EAC9E;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,gBAAgB;EAAEI;AAAmB,CAAC,GAAGR,SAAS,CAACoB,OAAO;AACzE,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}